/** <module> comp_kcopman

  Read object instances from the k-copman system

  Copyright (C) 2010 by Moritz Tenorth

  This program is free software; you can redistribute it and/or modify
  it under the terms of the GNU General Public License as published by
  the Free Software Foundation; either version 3 of the License, or
  (at your option) any later version.

  This program is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  GNU General Public License for more details.

  You should have received a copy of the GNU General Public License
  along with this program.  If not, see <http://www.gnu.org/licenses/>.

@author Moritz Tenorth
@license GPL
*/


:- module(comp_kcopman,
    [
      comp_kcopman/2
    ]).


% load libraries from prolog_perception
:- load_foreign_library('@PL_PATH_PREFIX@lib/libros_query_table_memory.so').
:- load_foreign_library('@PL_PATH_PREFIX@lib/libros_query_cluster_color.so').
:- load_foreign_library('@PL_PATH_PREFIX@lib/libros_query_table_objects.so').
:- load_foreign_library('@PL_PATH_PREFIX@lib/libros_query_plane.so').
:- load_foreign_library('@PL_PATH_PREFIX@lib/libros_query_tabletop_missing_objects.so').



%% comp_kcopman(-Obj)
%
% read object information from k-CopMan
%
comp_kcopman(Instance, knowrob:'VisualPerception') :-

  % TODO: this whole file is subject to change depending on what k-CopMan will output...

  % query the ROS module
  getFoundObjectsROS(RosObjList),

  % create all the object instances
  create_object_instances_from_ros_list(RosObjList, ObjsDirty, 42),
  remove_false_from_list(ObjsDirty, Instance).


%% create_object_instances_from_ros_list(+LongList, -Objs, +Index)
%
% split the long list into short pieces and create the object instances
%
create_object_instances_from_ros_list([First|_List], [Obj|Objs], Index) :-

%   append([_, _, _, _, Type, Xo, Yo, Zo], Rest, LongList),
  First = [_TableID, Time, _Tx, _Ty, _Tz, Type, _ObjID1, Xo, Yo, Zo],

  % create perception
  atom_concat('http://ias.cs.tum.edu/kb/knowrob.owl#TableMemory', Index, Perception),
  rdf_assert(Perception, rdf:type, 'http://ias.cs.tum.edu/kb/knowrob.owl#TableMemory'),

  atom_concat('http://ias.cs.tum.edu/kb/knowrob.owl#timepoint_', Time, TimePoint),
  rdf_assert(TimePoint, rdf:type, knowrob:'TimePoint'),
  rdf_assert(Perception, knowrob:startTime, TimePoint),

  % create object instance
  string_to_atom(Type, TypeAtom),
  atom_concat('http://ias.cs.tum.edu/kb/knowrob.owl#', TypeAtom, T),
  atom_concat(T, Index, Obj),
  rdf_assert(Obj, rdf:type, T),
  rdf_assert(Perception, knowrob:objectActedOn, Obj),

  % set the pose
  term_to_atom(rotMat3D-(1)-(0)-(0)-(Xo)-(0)-(1)-(0)-(Yo)-(0)-(0)-(1)-(Zo)-(0)-(0)-(0)-(1), LocIdentifier),
  atom_concat('http://ias.cs.tum.edu/kb/knowrob.owl#', LocIdentifier, Loc),
  rdf_assert(Loc, rdf:type, knowrob:'RotationMatrix3D'),
  rdf_assert(Perception, knowrob:eventOccursAt, Loc),

  Index1 is Index+1,
  create_object_instances_from_ros_list(_Rest, Objs,Index1).

create_object_instances_from_ros_list([], [], _).



%% remove_false_from_list(-In, -Out)
%
% filter all false from the list
%
remove_false_from_list([false|In], Out) :-
  remove_false_from_list(In, Out).

remove_false_from_list([First|In], [First|Out]) :-
  not(First=false),
  remove_false_from_list(In, Out).
remove_false_from_list([], []).

