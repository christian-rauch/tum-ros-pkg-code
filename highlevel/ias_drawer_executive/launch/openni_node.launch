<launch>
  <arg name="debug" default="false"/>
  <arg if="$(arg debug)" name="launch_prefix" value="xterm -rv -e gdb -ex run -args"/>
  <arg unless="$(arg debug)" name="launch_prefix" value=""/>
  <node pkg="openni_camera" type="openni_node" name="openni_node1" output="screen" launch-prefix="$(arg launch_prefix)">
    <!--param name="topic" value="first" /-->
    <!--param name="device_id" value="2@3" --> <!-- this line uses device on usb bus 2 and addres 3 -->
    <!--param name="device_id" value="B00367707227042B"/--> <!-- this line uses device with given serial number -->
    
    <param name="device_id" value="#1"/> <!-- this line uses first enumerated device -->
    <rosparam command="load" file="$(find openni_camera)/info/openni_params.yaml" />
    <param name="rgb_frame_id" value="/openni_rgb_optical_frame" />
    <param name="depth_frame_id" value="/openni_depth_optical_frame" />
    <param name="use_indices" value="false" />
    <param name="depth_registration" value="true" />
    <param name="image_mode" value="2" />
    <param name="depth_mode" value="2" />
    <param name="debayering" value="2" />
    <param name="depth_time_offset" value="0" />
    <param name="image_time_offset" value="0" />
  </node>
  <node pkg="topic_tools" type="throttle" name="kinect_throttle" output="screen" respawn="false"
       args="messages /camera/rgb/points 2 /kinect/cloud_throttled"/>

  <node pkg="topic_tools" type="throttle" name="kinect_throttle2" output="screen" respawn="false"
       args="messages /camera/rgb/points 2 /kinect_head/camera/rgb/points"/>

  <node pkg="tf" type="static_transform_publisher" name="kinect_base_link3" args="0 0 0 0 0 0 1 /openni_rgb_optical_frame /kinect_head_rgb_optical_frame 100" />

  <!-- include file="$(find openni_camera)/launch/kinect_frames.launch"/ -->
</launch>
